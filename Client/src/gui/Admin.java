/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.text.NumberFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.NumberFormatter;

/**
 * Class for Administrator use
 * @author pc
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form AdminProf
     */
    
    public Admin() {
        initComponents();
        dropDown.setVisible(false);
        CustomerTable.getColumnModel().getColumn(4).setPreferredWidth(175);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        main = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dropDownButton = new javax.swing.JToggleButton();
        dropDown = new javax.swing.JPanel();
        logout = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        booklist = new javax.swing.JScrollPane();
        BookingTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        searchCustomer = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        CID = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        cancelBooking = new javax.swing.JButton();
        update = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        UpdateBooking = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        Mail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        emailSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        booklist1 = new javax.swing.JScrollPane();
        WaitingTable = new javax.swing.JTable();
        moveWaiting = new javax.swing.JButton();
        refreshwaiting = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");
        setAutoRequestFocus(false);
        setLocation(new java.awt.Point(500, 200));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1024, 576));
        setMinimumSize(new java.awt.Dimension(1024, 576));
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 576));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        main.setBackground(new java.awt.Color(1, 1, 1));
        main.setMinimumSize(new java.awt.Dimension(1024, 576));
        main.setPreferredSize(new java.awt.Dimension(1024, 576));

        topPanel.setBackground(new java.awt.Color(255, 110, 0));
        topPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        topPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/if_Home_51304.png"))); // NOI18N
        topPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 130, 80));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 28)); // NOI18N
        jLabel2.setText("Control Panel");
        topPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-account-50.png"))); // NOI18N
        topPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 10, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel4.setText("Super User");
        topPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 24, 110, 30));

        dropDownButton.setBackground(new java.awt.Color(255, 110, 0));
        dropDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-double-down-24.png"))); // NOI18N
        dropDownButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        dropDownButton.setBorderPainted(false);
        dropDownButton.setContentAreaFilled(false);
        dropDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownButtonActionPerformed(evt);
            }
        });
        topPanel.add(dropDownButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 25, 30, 30));

        dropDown.setBackground(new java.awt.Color(255, 151, 57));

        logout.setBackground(new java.awt.Color(255, 162, 70));
        logout.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(177, 0, 0));
        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setText("Logout");
        logout.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout dropDownLayout = new javax.swing.GroupLayout(dropDown);
        dropDown.setLayout(dropDownLayout);
        dropDownLayout.setHorizontalGroup(
            dropDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
            .addGroup(dropDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dropDownLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        dropDownLayout.setVerticalGroup(
            dropDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(dropDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dropDownLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        topPanel.add(dropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 50, -1, -1));

        jTabbedPane1.setBackground(new java.awt.Color(254, 254, 254));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jTabbedPane1.setOpaque(true);

        booklist.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        BookingTable.setModel(new javax.swing.table.DefaultTableModel(view("view_booking"),
            new String [] {
                "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"

            }
        ));
        booklist.setViewportView(BookingTable);
        BookingTable.setDefaultEditor(Object.class, null);

        jLabel5.setText("Excusion ID");

        searchCustomer.setText("Search");
        searchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        cancelBooking.setText("Cancel booking");
        cancelBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookingActionPerformed(evt);
            }
        });

        jLabel7.setText("Update no of seats");

        UpdateBooking.setText("Update");
        UpdateBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBookingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(cancelBooking))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UpdateBooking)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateBooking))
                .addGap(25, 25, 25)
                .addComponent(cancelBooking)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(CID, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refresh)
                .addContainerGap(208, Short.MAX_VALUE))
            .addComponent(booklist)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(searchCustomer)
                    .addComponent(refresh)
                    .addComponent(CID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(booklist, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View booking list", jPanel3);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(view("view"),
            new String [] {
                "Customer ID", "First Name", "Last Name", "Cabin No.", "Email", "Password", "Contact","Admin Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        CustomerTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        CustomerTable.setEnabled(false);
        jScrollPane1.setViewportView(CustomerTable);

        jLabel6.setText("Email");

        emailSearch.setText("Search");
        emailSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(Mail, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailSearch)
                .addContainerGap(227, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(emailSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("View Customer details", jPanel1);

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 32)); // NOI18N

        booklist1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        WaitingTable.setModel(new javax.swing.table.DefaultTableModel(view("Waiting"),
            new String [] {
                "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"

            }
        ));
        booklist1.setViewportView(WaitingTable);
        WaitingTable.setDefaultEditor(Object.class, null);

        moveWaiting.setText("Move to booking");
        moveWaiting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveWaitingActionPerformed(evt);
            }
        });

        refreshwaiting.setText("Refresh");
        refreshwaiting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshwaitingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(booklist1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(moveWaiting)
                        .addGap(44, 44, 44)
                        .addComponent(refreshwaiting)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(booklist1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moveWaiting)
                    .addComponent(refreshwaiting))
                .addContainerGap(317, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Waiting List", jPanel2);

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(main, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dropDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownButtonActionPerformed
        // TODO add your handling code here:
        if (dropDownButton.isSelected())
            dropDown.setVisible(true);
        else
            dropDown.setVisible(false);
    }//GEN-LAST:event_dropDownButtonActionPerformed
    /**
     * This method is used to get 2 dimensional array from the server 
     * @param b a string with a request for the server
     * @return  2 dimensional array to be used for a table 
     */ 
    private String[] [] view(String b){
        try{
        String View[][];
        
        Socket s=new Socket("localhost",5000);
        
        String a[]={b};
        ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream oo=new ObjectInputStream(s.getInputStream());
        out.writeObject(a);
        View= (String[][])oo.readObject(); 
        return View;
        }
        
        

       
        catch(Exception e){
        e.printStackTrace();
        }
        return null;
}
        
    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        this.dispose();
        new Welcome().setVisible(true);
    }//GEN-LAST:event_logoutMouseClicked

    private void searchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerActionPerformed
        try
        {
            jPanel5.setVisible(true);
            booklist.setSize(815,250);
            String []a={"bookingQuery",CID.getText()};

            int x = Integer.parseInt(CID.getText());

            Socket s= new Socket("localhost",5000);
            ObjectOutputStream oo=new ObjectOutputStream(s.getOutputStream());
            ObjectInputStream oi=new ObjectInputStream(s.getInputStream());
            oo.writeObject(a);
            String[][] query=(String [][])oi.readObject();
            BookingTable.setModel(new javax.swing.table.DefaultTableModel(query,new String [] {
                "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"}));

        }
        catch (NumberFormatException nfe) {
        JOptionPane.showMessageDialog(this,"Please enter a number");
        CID.setText("");
    }
        catch(Exception e){}
    }//GEN-LAST:event_searchCustomerActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed

        BookingTable.setModel(new javax.swing.table.DefaultTableModel(view("view_booking"),
    new String [] {
        "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"
        
    }
));
    }//GEN-LAST:event_refreshActionPerformed
    
    private void emailSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailSearchActionPerformed
        try{
       
        String []a={"CustomerQuery",Mail.getText()};
        Socket s= new Socket("localhost",5000);
        ObjectOutputStream oo=new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream oi=new ObjectInputStream(s.getInputStream());
        oo.writeObject(a);
        String[][] query=(String [][])oi.readObject();
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(query,
    new String [] {
        "Customer ID", "First Name", "Last Name", "Cabin No.", "Email", "Password", "Contact","AdminStatus"
        
        }
        ));
         CustomerTable.getColumnModel().getColumn(4).setPreferredWidth(175);
        }
        
        catch(Exception e){}
                                           

    }//GEN-LAST:event_emailSearchActionPerformed

    private void cancelBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookingActionPerformed
    if (BookingTable.getSelectedRow()==-1)
       {
           JOptionPane.showMessageDialog(this,"Please select a row");
       }
       else{
       try{
        String []a = new String[8];
        a[0] = "cancelBooking";
        Socket s= new Socket("localhost",5000);
        ObjectOutputStream oo=new ObjectOutputStream(s.getOutputStream());
        ObjectInputStream oi=new ObjectInputStream(s.getInputStream());
        for (int i=1;i<=7;i++){
            a[i]= (String) BookingTable.getModel().getValueAt(BookingTable.getSelectedRow(), i-1);
            System.out.print(a[i]);
        }
        oo.writeObject(a);
        Thread.sleep(100);
        BookingTable.setModel(new javax.swing.table.DefaultTableModel(view("view_booking"),
    new String [] {
        "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"
        
    }
));
       }
       catch(Exception e){
       e.printStackTrace();
       }
       }
    }//GEN-LAST:event_cancelBookingActionPerformed

    private void UpdateBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBookingActionPerformed
       try{
        if (update.getText().equals("")){
        JOptionPane.showMessageDialog(this,"Please enter number of seats");  
        }
        else if (BookingTable.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(this,"Please select a row");  
        }
        else if (Integer.parseInt(update.getText())<=0){
            JOptionPane.showMessageDialog(this,"Invalid seats");  
        }
        else{
        
      
        BookingTable.setValueAt(update.getText(),BookingTable.getSelectedRow(),1);
         try{
            String []a = new String[8];
            a[0] = "update";
            Socket s= new Socket("localhost",5000);
            ObjectOutputStream oo=new ObjectOutputStream(s.getOutputStream());
            ObjectInputStream oi=new ObjectInputStream(s.getInputStream());
            for (int i=1;i<=7;i++){
                a[i]= (String) BookingTable.getModel().getValueAt(BookingTable.getSelectedRow(), i-1);
                System.out.print(a[i]);
            }
            oo.writeObject(a);
            String [] e=(String [])oi.readObject();
            if (e[0].equals("Not Enough")){
                JOptionPane.showMessageDialog(this,"Not enough seats are available!");
            }
            else if (e[0].equals("Success")){
                JOptionPane.showMessageDialog(this,"Booking Updated!");
            }
            
            } catch (IOException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }

        BookingTable.setModel(new javax.swing.table.DefaultTableModel(view("view_booking"),
    new String [] {
        "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"
        
    }
));

        }
        }
        catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this,"Please enter a number");
            update.setText("");}
        catch(Exception e){
             e.printStackTrace();
         }
    }//GEN-LAST:event_UpdateBookingActionPerformed

    private void moveWaitingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveWaitingActionPerformed
  
        ObjectInputStream in=null;

        WaitingTable.setValueAt("0",WaitingTable.getSelectedRow(),4);
        WaitingTable.setValueAt("1",WaitingTable.getSelectedRow(),3);
           
        if (WaitingTable.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(this,"Please select a row");
        }
        else
        {
            try{
            String []a = new String[8];
            a[0] = "Waiting_Booking";
            Socket s= new Socket("localhost",5000);
            ObjectOutputStream oo=new ObjectOutputStream(s.getOutputStream());
            ObjectInputStream oi=new ObjectInputStream(s.getInputStream());
            for (int i=1;i<=7;i++){
                a[i]= (String) WaitingTable.getModel().getValueAt(WaitingTable.getSelectedRow(), i-1);
                System.out.print(a[i]);
            }
            oo.writeObject(a);
            String [] e=(String [])oi.readObject();
            if (e[0].equals("no seats")){
                JOptionPane.showMessageDialog(this,"Not enough seats are available!");
            }
            else if (e[0].equals("success")){
                JOptionPane.showMessageDialog(this,"Moved to booking!");
            }
            Thread.sleep(50);
            WaitingTable.setModel(new javax.swing.table.DefaultTableModel(view("Waiting"),
    new String [] {
        "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"

    }
));
            } catch (IOException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        
        
    }//GEN-LAST:event_moveWaitingActionPerformed

    private void refreshwaitingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshwaitingActionPerformed
        WaitingTable.setModel(new javax.swing.table.DefaultTableModel(view("Waiting"),
    new String [] {
        "Booking_Id","No_of_Seats","Date","Booking_status","Waiting_status","C_ID","Ex_ID"

    }
));
    }//GEN-LAST:event_refreshwaitingActionPerformed
  
       
    
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookingTable;
    private javax.swing.JFormattedTextField CID;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JTextField Mail;
    private javax.swing.JButton UpdateBooking;
    private javax.swing.JTable WaitingTable;
    private javax.swing.JScrollPane booklist;
    private javax.swing.JScrollPane booklist1;
    private javax.swing.JButton cancelBooking;
    private javax.swing.JPanel dropDown;
    private javax.swing.JToggleButton dropDownButton;
    private javax.swing.JButton emailSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel logout;
    private javax.swing.JPanel main;
    private javax.swing.JButton moveWaiting;
    private javax.swing.JButton refresh;
    private javax.swing.JButton refreshwaiting;
    private javax.swing.JButton searchCustomer;
    private javax.swing.JPanel topPanel;
    private javax.swing.JTextField update;
    // End of variables declaration//GEN-END:variables
}
